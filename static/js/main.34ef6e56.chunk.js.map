{"version":3,"sources":["components/timer.tsx","utils/getTimer.ts","components/pomodoroTimer.tsx","components/button.tsx","sounds/bell-start.mp3","sounds/bell-finish.mp3","components/home.tsx","hooks/useInterval.tsx","App.tsx","index.tsx"],"names":["Timer","props","className","seconds","mainTimer","Date","toISOString","substr","PomodoroTimer","working","mainTime","Button","onClick","text","audioBellStart","Audio","bellStart","audioBellFinish","bellFinish","Home","useState","pomodoroTime","setPomodoroTime","restTime","setRestTime","cycles","setCycles","totalCycles","Array","fill","setMainTime","timeCounting","setTimeCounting","setWorking","resting","setResting","cyclesQtdManager","setCyclesQtdManager","completedCycles","setCompletedCycles","fullWorkingTime","setFullWorkingTime","numberPomodoros","setNumberPomodoros","callback","delay","saveCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","configWork","useCallback","play","configRest","long","document","body","classList","add","remove","length","pop","type","onChange","e","target","value","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34ef6e56.chunk.js","sourcesContent":["import React from 'react';\r\nimport { secondsToMin } from '../utils/getTimer';\r\n\r\ninterface Props {\r\n    mainTimer: number;\r\n}\r\n\r\nexport default function Timer(props: Props): JSX.Element {\r\n    return <div className=\"timer\">{secondsToMin(props.mainTimer)}</div>;\r\n}\r\n","export function secondsToMin(seconds: number): string {\r\n    const time = (n: number) => new Date(n * 1000).toISOString().substr(14, 5);\r\n    return `${time(seconds)}`;\r\n}\r\n\r\nexport function secondsToHours(seconds: number): string {\r\n    const time = (n: number) => new Date(n * 1000).toISOString().substr(11, 8);\r\n    return `${time(seconds)}`;\r\n}\r\n","import React from 'react';\r\nimport Timer from './timer';\r\n\r\ninterface Props {\r\n    working: boolean;\r\n    mainTime: number;\r\n}\r\n\r\nexport default function PomodoroTimer(props: Props) {\r\n    return (\r\n        <div>\r\n            <h2>Você esta: {props.working ? 'Trabalhando' : 'Descansando'}</h2>\r\n            <Timer mainTimer={props.mainTime} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n    text: string;\r\n    onClick?: () => void;\r\n    className?: string;\r\n}\r\n\r\nexport default function Button(props: Props): JSX.Element {\r\n    return (\r\n        <button onClick={props.onClick} className={props.className}>\r\n            {props.text}\r\n        </button>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bell-start.d01df824.mp3\";","export default __webpack_public_path__ + \"static/media/bell-finish.6b59c479.mp3\";","import React, { useEffect, useState, useCallback } from 'react';\r\n\r\nimport useInterval from '../hooks/useInterval';\r\nimport PomodoroTimer from './pomodoroTimer';\r\nimport Button from './button';\r\nimport { secondsToHours } from '../utils/getTimer';\r\n\r\nimport bellStart from '../sounds/bell-start.mp3';\r\nimport bellFinish from '../sounds/bell-finish.mp3';\r\n\r\nconst audioBellStart = new Audio(bellStart);\r\nconst audioBellFinish = new Audio(bellFinish);\r\n\r\nexport default function Home() {\r\n    const [pomodoroTime, setPomodoroTime] = useState(0);\r\n    const [restTime, setRestTime] = useState(0);\r\n    const [cycles, setCycles] = useState(4);\r\n\r\n    const totalCycles: boolean[] = new Array(cycles - 1).fill(true);\r\n\r\n    const [mainTime, setMainTime] = useState(pomodoroTime);\r\n    const [timeCounting, setTimeCounting] = useState(false);\r\n    const [working, setWorking] = useState(false);\r\n    const [resting, setResting] = useState(false);\r\n    const [cyclesQtdManager, setCyclesQtdManager] = useState(totalCycles);\r\n\r\n    const [completedCycles, setCompletedCycles] = useState(0);\r\n    const [fullWorkingTime, setFullWorkingTime] = useState(0);\r\n    const [numberPomodoros, setNumberPomodoros] = useState(0);\r\n\r\n    useInterval(\r\n        () => {\r\n            setMainTime(mainTime - 1);\r\n            if (working) setFullWorkingTime(fullWorkingTime + 1);\r\n        },\r\n        timeCounting ? 1000 : null\r\n    );\r\n\r\n    const configWork = useCallback(() => {\r\n        setTimeCounting(true);\r\n        setWorking(true);\r\n        setResting(false);\r\n        setMainTime(pomodoroTime * 60);\r\n        audioBellStart.play();\r\n    }, [setTimeCounting, setWorking, setResting, setMainTime, pomodoroTime]);\r\n\r\n    const configRest = useCallback(\r\n        (long: boolean) => {\r\n            setTimeCounting(true);\r\n            setWorking(false);\r\n            setResting(true);\r\n\r\n            if (long) {\r\n                setMainTime(restTime * 60 * cycles);\r\n            } else {\r\n                setMainTime(restTime * 60);\r\n            }\r\n\r\n            audioBellFinish.play();\r\n        },\r\n        [setTimeCounting, setWorking, setResting, setMainTime, restTime, cycles]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (working) document.body.classList.add('working');\r\n        if (resting) document.body.classList.remove('working');\r\n\r\n        if (mainTime > 0) return;\r\n\r\n        if (working && cyclesQtdManager.length > 0) {\r\n            configRest(false);\r\n            cyclesQtdManager.pop();\r\n        } else if (working && cyclesQtdManager.length <= 0) {\r\n            configRest(true);\r\n            setCyclesQtdManager(totalCycles);\r\n            setCompletedCycles(completedCycles + 1);\r\n        }\r\n\r\n        if (working) setNumberPomodoros(numberPomodoros + 1);\r\n\r\n        if (resting) configWork();\r\n    }, [\r\n        working,\r\n        resting,\r\n        mainTime,\r\n        configRest,\r\n        cyclesQtdManager,\r\n        setNumberPomodoros,\r\n        setCompletedCycles,\r\n        numberPomodoros,\r\n        completedCycles,\r\n        configWork,\r\n        totalCycles\r\n    ]);\r\n\r\n    return (\r\n        <div className=\"pomodoro\">\r\n            <PomodoroTimer working={working} mainTime={mainTime} />\r\n\r\n            <div className=\"controls\">\r\n                <Button\r\n                    text={!working ? 'Começar' : 'Reiniciar'}\r\n                    onClick={() => {\r\n                        if (pomodoroTime == 0 || restTime === 0 || cycles === 0)\r\n                            return;\r\n                        configWork();\r\n                    }}\r\n                />\r\n                <Button\r\n                    className={!working && !resting ? 'hidden' : ''}\r\n                    text={timeCounting ? 'Pausar' : 'Retornar'}\r\n                    onClick={() => {\r\n                        setTimeCounting(!timeCounting);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {timeCounting ? null : (\r\n                <ul className=\"start-controls\">\r\n                    <li>\r\n                        Tempo de trabalho:\r\n                        <div className=\"input-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    setPomodoroTime(+e.target.value);\r\n                                }}\r\n                            />\r\n                            min\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Tempo de descanso curto:\r\n                        <div className=\"input-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    setRestTime(+e.target.value);\r\n                                }}\r\n                            />\r\n                            min\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Número de ciclos:\r\n                        <div className=\"input-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={cycles}\r\n                                onChange={(e) => {\r\n                                    setCycles(+e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            )}\r\n\r\n            <div className=\"details\">\r\n                <p>Ciclos concluídos: {completedCycles}</p>\r\n                <p>Horas trabalhadas: {secondsToHours(fullWorkingTime)}</p>\r\n                <p>Pomodoros concluídos: {numberPomodoros}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(\r\n    callback: () => void,\r\n    delay: number | null\r\n): void {\r\n    const saveCallback = useRef(callback);\r\n\r\n    useEffect(() => {\r\n        saveCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            if (saveCallback.current) saveCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n","import React from 'react';\nimport Home from './components/home';\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"app\">\n            <Home />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}